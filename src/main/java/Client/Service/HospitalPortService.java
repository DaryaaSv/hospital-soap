
package Client.Service;

import jakarta.xml.ws.*;

import javax.xml.namespace.QName;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "HospitalPortService", targetNamespace = "http://spring.io/guides/gs-producing-web-service", wsdlLocation = "http://localhost:1060/ws/hospital.wsdl")
public class HospitalPortService
    extends Service
{

    private final static URL HOSPITALPORTSERVICE_WSDL_LOCATION;
    private final static WebServiceException HOSPITALPORTSERVICE_EXCEPTION;
    private final static QName HOSPITALPORTSERVICE_QNAME = new QName("http://spring.io/guides/gs-producing-web-service", "HospitalPortService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:1060/ws/hospital.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        HOSPITALPORTSERVICE_WSDL_LOCATION = url;
        HOSPITALPORTSERVICE_EXCEPTION = e;
    }

    public HospitalPortService() {
        super(__getWsdlLocation(), HOSPITALPORTSERVICE_QNAME);
    }

    public HospitalPortService(WebServiceFeature... features) {
        super(__getWsdlLocation(), HOSPITALPORTSERVICE_QNAME, features);
    }

    public HospitalPortService(URL wsdlLocation) {
        super(wsdlLocation, HOSPITALPORTSERVICE_QNAME);
    }

    public HospitalPortService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, HOSPITALPORTSERVICE_QNAME, features);
    }

    public HospitalPortService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HospitalPortService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns HospitalPort
     */
    @WebEndpoint(name = "HospitalPortSoap11")
    public HospitalPort getHospitalPortSoap11() {
        return super.getPort(new QName("http://spring.io/guides/gs-producing-web-service", "HospitalPortSoap11"), HospitalPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HospitalPort
     */
    @WebEndpoint(name = "HospitalPortSoap11")
    public HospitalPort getHospitalPortSoap11(WebServiceFeature... features) {
        return super.getPort(new QName("http://spring.io/guides/gs-producing-web-service", "HospitalPortSoap11"), HospitalPort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (HOSPITALPORTSERVICE_EXCEPTION!= null) {
            throw HOSPITALPORTSERVICE_EXCEPTION;
        }
        return HOSPITALPORTSERVICE_WSDL_LOCATION;
    }

}
