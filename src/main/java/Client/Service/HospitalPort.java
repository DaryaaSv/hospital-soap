
package Client.Service;

import Client.Models.Doctor;
import Client.Models.Equipment;
import Client.Models.ObjectFactory;
import Client.Requests.GetDoctorByIdRequest;
import Client.Requests.TransformXMLToHTMLRequest;
import Client.Responses.AddEquipmentResponse;
import Client.Responses.GetAllPatientsResponse;
import Client.Responses.TransformXMLToHTMLResponse;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HospitalPort", targetNamespace = "http://spring.io/guides/gs-producing-web-service")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HospitalPort {


    /**
     * 
     * @param transformXMLToHTMLRequest
     * @return
     *     returns lt.viko.eif.client.TransformXMLToHTMLResponse
     */
    @WebMethod
    @WebResult(name = "transformXMLToHTMLResponse", targetNamespace = "http://spring.io/guides/gs-producing-web-service", partName = "transformXMLToHTMLResponse")
    public TransformXMLToHTMLResponse transformXMLToHTML(
        @WebParam(name = "transformXMLToHTMLRequest", targetNamespace = "http://spring.io/guides/gs-producing-web-service", partName = "transformXMLToHTMLRequest")
        TransformXMLToHTMLRequest transformXMLToHTMLRequest);

    /**
     * 
     * @param getDoctorByIdRequest
     * @return
     *     returns lt.viko.eif.client.Doctor
     */
    @WebMethod
    @WebResult(name = "getDoctorByIdResponse", targetNamespace = "http://spring.io/guides/gs-producing-web-service", partName = "getDoctorByIdResponse")
    public Doctor getDoctorById(
        @WebParam(name = "getDoctorByIdRequest", targetNamespace = "http://spring.io/guides/gs-producing-web-service", partName = "getDoctorByIdRequest")
        GetDoctorByIdRequest getDoctorByIdRequest);

    /**
     * 
     * @param addEquipmentRequest
     * @return
     *     returns lt.viko.eif.client.AddEquipmentResponse
     */
    @WebMethod
    @WebResult(name = "addEquipmentResponse", targetNamespace = "http://spring.io/guides/gs-producing-web-service", partName = "addEquipmentResponse")
    public AddEquipmentResponse addEquipment(
        @WebParam(name = "addEquipmentRequest", targetNamespace = "http://spring.io/guides/gs-producing-web-service", partName = "addEquipmentRequest")
        Equipment addEquipmentRequest);

    /**
     * 
     * @param getAllPatientsRequest
     * @return
     *     returns lt.viko.eif.client.GetAllPatientsResponse
     */
    @WebMethod
    @WebResult(name = "getAllPatientsResponse", targetNamespace = "http://spring.io/guides/gs-producing-web-service", partName = "getAllPatientsResponse")
    public GetAllPatientsResponse getAllPatients(
        @WebParam(name = "getAllPatientsRequest", targetNamespace = "http://spring.io/guides/gs-producing-web-service", partName = "getAllPatientsRequest")
        Object getAllPatientsRequest);

}
